# -*- coding: utf-8 -*-
"""Homework5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b34E-nmtlFE91-Lvw5GCARcZm5lFfP9j
"""

import nltk, math, google.colab.files,textblob, json, joblib, matplotlib.pyplot as plt, requests, sklearn.metrics, sklearn.model_selection, sklearn.tree
nltk.download("all",quiet=True)

response = requests.get("https://dgoldberg.sdsu.edu/515/appliance_reviews.json")

if response:

  data = json.loads(response.text)
  all_reviews = ""
  all_words = []
  x=[]
  y=[]
  for line in data:
    review = line["Review"]
    review=review.lower()
    #print(review)
    stars = line["Stars"]
    safety_hazard = line["Safety hazard"]
    #all_reviews.append(review)
    all_reviews=all_reviews+review+""
  blob = textblob.TextBlob(all_reviews)
  for word in blob.words:
    words=blob.words
    all_words.append(word)
  print("All words:",len(all_words))
  unique_list=[]
  for word in all_words:
    if word not in unique_list:
      unique_list.append(word)
  #for word in unique_list:
  #print("Unique list :",(unique_list))
  print("Unique list :",len(unique_list))

  for word in unique_list:
    A=0
    B=0
    C=0
    D=0
    relevance_scores=[]
    for line in data:
      review = line["Review"]
      review=review.lower()
      safety_hazard = line["Safety hazard"]
      if word in review and safety_hazard==1:
        A+=1
        #print("A",A)
      elif word in review and safety_hazard==0:
        B+=1
      elif word not in review and safety_hazard==1:
        C+=1
        #print("C",C)
      elif word not in review and safety_hazard==0:
        D+=1
        #print("D",D)

    try:
      #numerator=(((A+B+C+D)**(1/2))*((A*D)-(C*B)))
      #denominator=((A+B)*(C+D))**(1/2)
      relevance_score=(((A+B+C+D)**(1/2))*((A*D)-(C*B)))/(((A+B)*(C+D))**(1/2))
      #print(relevance_score)
    except:
      relevance_score=0
    if relevance_score >=4000:
      relevance_scores.append(relevance_score)
      #print("len**:", len(relevance_scores))     
      #print("final words:",word)
      if word in review:
        x.append("1")
      else:
        x.append("0")
      print("x:",x)
    else:
      continue
    
else:
  print("Sorry, Connection error.")

word